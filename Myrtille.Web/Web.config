<?xml version="1.0" encoding="UTF-8"?>
<configuration>

  <!--
    CAUTION! logging requires the ASP.NET IIS worker process to have write permission to the "log" folder.
    Among other options, you may grant the myrtille application pool ("IIS AppPool\MyrtilleAppPool") write permission to it (normally automatically set by the myrtille installer).
  -->

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Log4net"/>
  </configSections>

  <log4net>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="LogFileAppender"/>
    </root>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="log\Myrtille.Web.log"/>
      <param name="AppendToFile" value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>
  </log4net>

  <system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="Log4netTraceListener" type="Myrtille.Log.Log4netTraceListener, Myrtille.Common">
          <!-- trace level (Information, Warning or Error). CAUTION! Information level will hinder performance -->
          <filter type="Myrtille.Log.Log4netTraceFilter, Myrtille.Common" initializeData="Warning"/>
        </add>
        <!-- disable output window traces. CAUTION! enabling the default output window will hinder performance -->
        <remove name="Default"/>
      </listeners>
    </trace>
  </system.diagnostics>
  
  <system.web>
    <compilation defaultLanguage="C#" debug="true" targetFramework="4.5"/>
    <!-- handle file upload/download up to 1GB. maxRequestLength is measured in kilobytes and executionTimeout in seconds -->
    <httpRuntime requestValidationMode="4.5" targetFramework="4.5" maxRequestLength="1048576" executionTimeout="360000"/>
    <pages enableViewState="false" validateRequest="false" enableEventValidation="false" clientIDMode="AutoID"/>
    <authorization>
      <allow users="*"/>
    </authorization>
    <authentication mode="None"/>
    <!-- CAUTION! cookieless http session allows multiple connections/tabs but, as the http session id is passed into the url, it also implies a risk of session spoofing
    to mitigate that risk, an authentication cookie is stored into the browser initiating the http session; any other client accessing the http session without it will be rejected
    please note that, even if the http session is cookieless, this mechanism requires cookies to be enabled client side; you can disable it into the appSettings below ("cookielessSessionProtection" key)
    to enable cookieless http sessions, uncomment the line below (then comment the next line). use at your own risk! -->
    <!--<sessionState mode="InProc" cookieless="UseUri" timeout="60"/>-->
    <sessionState mode="InProc" cookieless="UseCookies" cookieName="AuthSecToken" timeout="60"/>
    <globalization requestEncoding="utf-8" responseEncoding="utf-8" culture="auto" uiCulture="auto"/>
    <customErrors mode="Off"/>
  </system.web>
  
  <system.webServer>
    <defaultDocument>
      <files>
        <clear />
        <add value="Default.aspx"/>
      </files>
    </defaultDocument>
    <urlCompression doDynamicCompression="false"/>
    <staticContent>
      <mimeMap fileExtension=".webp" mimeType="image/webp"/>
    </staticContent>
    <security>
      <requestFiltering>
        <!-- handle file upload/download up to 1GB. maxAllowedContentLength is measured in bytes -->
        <requestLimits maxAllowedContentLength="1073741824"/>
      </requestFiltering>
    </security>
    <handlers>
      <add path="/SocketHandler.ashx" verb="*" name="SocketHandler" type="Myrtille.Web.SocketHandler"/>
    </handlers>
    <httpErrors errorMode="Detailed"/>
  </system.webServer>

  <system.serviceModel>

    <client>
      <endpoint address="http://localhost:8080/Myrtille/RemoteSessionProcess" binding="wsDualHttpBinding" bindingConfiguration="wsDualHttpBindingCallback" contract="Myrtille.Services.Contracts.IRemoteSessionProcess"/>
      <endpoint address="http://localhost:8080/Myrtille/FileStorage" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingFileStream" contract="Myrtille.Services.Contracts.IFileStorage"/>
      <endpoint address="http://localhost:8080/Myrtille/PrinterService" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingFileStream" contract="Myrtille.Services.Contracts.IPrinterService"/>
      <endpoint address="http://localhost:8080/Myrtille/MFAAuthentication" binding="basicHttpBinding" contract="Myrtille.Services.Contracts.IMFAAuthentication"/>
      <endpoint address="http://localhost:8080/Myrtille/EnterpriseService" binding="basicHttpBinding" contract="Myrtille.Services.Contracts.IEnterpriseService"/>
    </client>
    
    <bindings>
      <wsDualHttpBinding>
        <binding name="wsDualHttpBindingCallback" receiveTimeout="infinite" maxReceivedMessageSize="2147483647">
          <security mode="Message"/>
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
          <reliableSession inactivityTimeout="infinite"/>
        </binding>
      </wsDualHttpBinding>
      <basicHttpBinding>
        <!-- buffer size: 64KB; max file size: 1GB -->
        <binding name="basicHttpBindingFileStream" transferMode="Streamed" messageEncoding="Mtom" maxBufferSize="65536" maxReceivedMessageSize="1073741824" closeTimeout="infinite" openTimeout="infinite" receiveTimeout="infinite" sendTimeout="infinite">
          <security mode="None"/>
        </binding>
      </basicHttpBinding>
    </bindings>
    
  </system.serviceModel>

  <appSettings>
    <!-- disable Visual Studio SignalR -->
    <add key="vs:EnableBrowserLink" value="false"/>
    <!-- disable Visual Studio Page Inspector -->
    <add key="PageInspector:ServerCodeMappingSupport" value="Disabled" />
    <!-- providing access to the remote clipboard may be a security issue, it can be disabled below -->
    <add key="allowRemoteClipboard" value="true"/>
    <!-- allow remote session sharing -->
    <add key="allowSessionSharing" value="true"/>
    <!-- client ip protection -->
    <add key="clientIPTracking" value="false"/>
    <!-- if the browser window/tab of the remote session owner is closed without disconnecting first, or if the connection is lost, delay (ms) before the remote session is disconnected by the gateway. 0 to disable -->
    <add key="clientIdleTimeout" value="60000"/>
  </appSettings>
  
</configuration>
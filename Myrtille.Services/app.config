<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Log4net"/>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <connectionStrings>
    <!--Default provider for enterprise mode database, this uses SQL CE local database-->
    <add name="enterpriseDBConnection" providerName="System.Data.SqlServerCe.4.0" connectionString="Data Source=|DataDirectory|MyrtilleEnterprise.sdf"/>
    <!-- 
      If you wish to use a different path for the db other than the default data directory replace |DataDirectory| with the full path to the .sdf file
      
      If you wish to use another DMBS system such as sql server update the connection details above
      example 
      
      providerName="System.Data.SqlClient" connectionString="Data Source=localhost;Initial Catalog=Myrtille;Integrated Security=True"
    -->
  </connectionStrings>
  <log4net>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="LogFileAppender"/>
    </root>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="..\log\Myrtille.Services.log"/>
      <param name="AppendToFile" value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline"/>
      </layout>
    </appender>
  </log4net>
  
  <system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="Log4netTraceListener" type="Myrtille.Log.Log4netTraceListener, Myrtille.Common">
          <!-- trace level (Information, Warning or Error) -->
          <filter type="Myrtille.Log.Log4netTraceFilter, Myrtille.Common" initializeData="Information"/>
        </add>
        <!-- disable output window traces -->
        <remove name="Default"/>
      </listeners>
    </trace>
    <sources>
      <source name="PdfScribe" switchName="PdfScribeAll" >
        <listeners>
          <add name="textwriterListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="PdfScribe_trace.log" traceOutputOptions="DateTime" />
          <remove name="Default" />
          <clear />
          <!-- Remove the <clear /> element to turn on tracing output -->
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="PdfScribeAll" value="Verbose"/>
    </switches>
  </system.diagnostics>
  
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlCeConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="System.Data.SqlServerCe.4.0"/>
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
      <provider invariantName="System.Data.SqlServerCe.4.0" type="System.Data.Entity.SqlServerCompact.SqlCeProviderServices, EntityFramework.SqlServerCompact"/>
    </providers>
  </entityFramework>
  
  <system.data>
    <DbProviderFactories>
      <remove invariant="System.Data.SqlServerCe.4.0"/>
      <add name="Microsoft SQL Server Compact Data Provider 4.0" invariant="System.Data.SqlServerCe.4.0" description=".NET Framework Data Provider for Microsoft SQL Server Compact" type="System.Data.SqlServerCe.SqlCeProviderFactory, System.Data.SqlServerCe, Version=4.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"/>
    </DbProviderFactories>
  </system.data>
  
  <system.serviceModel>
    
    <services>
      <service name="Myrtille.Services.RemoteSessionProcess">
        <endpoint address="" binding="wsDualHttpBinding" bindingConfiguration="wsDualHttpBindingCallback" contract="Myrtille.Services.Contracts.IRemoteSessionProcess"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/Myrtille/RemoteSessionProcess"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Myrtille.Services.FileStorage" behaviorConfiguration="FileStreamServiceBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingFileStream" contract="Myrtille.Services.Contracts.IFileStorage"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/Myrtille/FileStorage"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Myrtille.Services.PrinterService" behaviorConfiguration="FileStreamServiceBehavior">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="basicHttpBindingFileStream" contract="Myrtille.Services.Contracts.IPrinterService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/Myrtille/PrinterService"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Myrtille.Services.MFAAuthentication">
        <endpoint address="" binding="basicHttpBinding" contract="Myrtille.Services.Contracts.IMFAAuthentication"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/Myrtille/MFAAuthentication"/>
          </baseAddresses>
        </host>
      </service>
      <service name="Myrtille.Services.EnterpriseService">
        <endpoint address="" binding="basicHttpBinding" contract="Myrtille.Services.Contracts.IEnterpriseService"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8080/Myrtille/EnterpriseService"/>
          </baseAddresses>
        </host>
      </service>
    </services>
    
    <bindings>
      <wsDualHttpBinding>
        <binding name="wsDualHttpBindingCallback" receiveTimeout="infinite" maxReceivedMessageSize="2147483647">
          <security mode="Message"/>
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
          <reliableSession inactivityTimeout="infinite"/>
        </binding>
      </wsDualHttpBinding>
      <basicHttpBinding>
        <!-- buffer size: 64KB; max file size: 1GB -->
        <binding name="basicHttpBindingFileStream" transferMode="Streamed" messageEncoding="Mtom" maxBufferSize="65536" maxReceivedMessageSize="1073741824" closeTimeout="infinite" openTimeout="infinite" receiveTimeout="infinite" sendTimeout="infinite">
          <security mode="None"/>
        </binding>
      </basicHttpBinding>
    </bindings>
    
    <behaviors>
      <serviceBehaviors>
        <behavior name="FileStreamServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  
  </system.serviceModel>
  
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  
  <appSettings>
    
    <!-- log remote session events into a file (located into <Myrtille folder>\log) -->
    <add key="RemoteSessionLog" value="false"/>
    
    <!-- OASIS settings, visit https://oasis.oliveinnovations.com -->
    <!-- register, create an application to get details -->
    <!-- before doing this, you need a one time passcode generation app such as google authenticator -->
    <!-- uncomment the adapter line below to use MFA -->
    <!--<add key="MFAAuthAdapter" value="Myrtille.MFAProviders.OASISOTPProvider, Myrtille.MFAProviders" />-->
    <add key="OASISApiKey" value="login to oasis admin and go to application for value" />
    <add key="OASISAppKey" value="login to oasis admin and go to application for value" />
    <add key="OASISAppID" value="login to oasis admin and go to application for value" />
    
    <!-- uncomment the adapter line below to use enterprise mode -->
    <!--<add key="EnterpriseAdapter" value="Myrtille.Enterprise.ActiveDirectory, Myrtille.Enterprise" />-->
    <add key="EnterpriseAdminGroup" value="a domain group who can administer hosts" />
    <add key="EnterpriseDomain" value="the name of your domain (i.e. MYDOMAIN or mydomain.local) or the domain controller FQDN or IP" />
    

    <!-- FreeRDP params below. CAUTION! changing most of these settings will hinder performance! -->
    <!-- color depth: 8, 15, 16 (default), 24, 32 -->
    <add key="FreeRDPBpp" value="16"/>
    <!-- gdi mode: sw (software, default), hw (hardware) -->
    <add key="FreeRDPGdi" value="sw"/>
    <!-- wallpaper -->
    <add key="FreeRDPWallpaper" value="false"/>
    <!-- desktop composition -->
    <add key="FreeRDPAero" value="false"/>
    <!-- window drag -->
    <add key="FreeRDPWindowDrag" value="false"/>
    <!-- menu animations -->
    <add key="FreeRDPMenuAnims" value="false"/>
    <!-- themes -->
    <add key="FreeRDPThemes" value="false"/>
    <!-- smooth fonts (requires ClearType enabled on the remote server) -->
    <add key="FreeRDPSmoothFonts" value="true"/>
    <!-- ignore certificate warning (when using NLA). default true. WARNING! FreeRDP won't auto-accept the certificates (in case of self-signed certificates, name mismatch or expiration for example), so ensure your rdp servers certificates are valid and trusted by the machine running myrtille before changing this value! -->
    <add key="FreeRDPCertIgnore" value="true"/>
    <!-- pdf virtual printer redirection -->
    <add key="FreeRDPPdfPrinter" value="true"/>

  </appSettings>

</configuration>